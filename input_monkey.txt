print(2);                   // 2
print(5+-7*6-8/2/3+5^2);    // -13.33
print(5+-7*(6-8/2)+5^2);    // 16

a = 5;                      // Identifier a not declared in this scope
let a = 5 ; print(a);       // 5
let b = 3 ; print(b);       // 3

let a = 3 ;  // Identifier a already declared in this scope

a=8; print(a);              // 8

a=a*3; print(a);            // 24
b=a+b; print(a); print(b);  // 24, 27

{
    let c=4;
    a=2;
    print(a); print(b); print(c);  // 2, 27, 4
}
print(a); print(b);       // 2, 27
print(c);               // Identifier c not declared in this scope

{   
    print(a);       // 2
    let a=10;
    print(a);       // 10
}
print(a);           // 2

print(false);                        // false
print(true && ! false || false );    // true

let var1=true; print(var1);          // true
b=! var1; print(b);                  // false

b=var1 || a;                         // Expected a boolean

print(1>=3);        // false
print(2!=3);        // true


let var3=1<2; print(var3);  // true
let x=1<2<3; print(x);   // Expected a number // Identifier x not declared

print(true?1:2);     // 1

print(a);                                   // 2
let d=a<0 ? 100: a<4 ? -20:30; print(d);    // -20 

let addOne=fn(a){a+1;};

print(addOne(2));       // 3

print(addOne(addOne(4))); //6

let newAdder = fn(x) {
  return fn(y) {x + y; };
};

let addTwo = newAdder(2);

let c1=addTwo(3);
print(c1);       // 5

print(addTwo(4)); // 6

let addThree = newAdder(3);
print(addThree(4)+1);   // 8

print(addThree(2*2+3)); //10

let newnewAdder = fn(a, b) {
    fn(c) { a + b + c; };
};

let adder = newnewAdder(1, 2);

let b2=adder(8); 
print(b2);   // 11

let twice = fn(f, x) {
  return f(f(x));
};

let addTwo2 = fn(x) {
  return x + 2;
};

print(twice(addTwo2, 2)); // 6

print(twice(addThree, 5)); // 11

let const=5; 

let newfunction = fn(x){
    print(const);
    let doubler = fn(y){
      return y*2;
    };
    return doubler(x);
};

print(newfunction(10)); // 5 20

const+=2;

print(newfunction(30)); // 7 60

let f1= fn(a){
    return fn(b){
      return fn(c){
        a+b+c;
      };
    };
};

let g1=f1(100);
let g2=g1(222);
let g3=g2(10000);

print(g3); // 10322